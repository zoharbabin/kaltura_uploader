name: Test & Publish to PyPI

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"    # Trigger publish on tags like v0.1.0, v1.2.3, etc.
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Run Tests (Python 3.10 & 3.11)
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # If your tests need dev packages, ensure they are in requirements.txt
          pip install -r requirements.txt
          # If not already in requirements.txt, install pytest
          pip install pytest

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -v


  publish:
    # Only run this job if it is a tag starting with 'v'
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ test ]
    runs-on: ubuntu-latest
    # environment: pypi   # (Uncomment if you use a named environment)

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          # Use a single Python version for building/publishing
          python-version: "3.10"

      - name: Build package
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          python -m build

      # ----- [Option 1: Publish via OIDC to PyPI] -----
      - name: Publish via OIDC
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # Replace with your actual PyPI package name if it differs
          package-name: "kaltura-uploader"
        env:
          # Required to request an OIDC token from GitHub
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ----- [Option 2: Publish using classic Twine credentials] -----
      # (Comment out the above OIDC step and uncomment the steps below if you prefer credentials)
      #
      # - name: Publish to PyPI
      #   env:
      #     TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      #     TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      #   run: |
      #     python -m pip install --upgrade pip setuptools wheel twine build
      #     python -m build
      #     twine upload dist/*
